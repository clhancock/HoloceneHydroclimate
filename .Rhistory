hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
if (var == 'HC'){
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelVar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
regEns[regionData[[reg]][[var]][["pltTimeAvail50range"]],] <- regEnsNA[regionData[[reg]][[var]][["pltTimeAvail50range"]],]
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.05,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=alph,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=alph-0.2,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelVar)){
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)*1.2
compBands$ts <- compBands$ts + geom_hline(yintercept=0,size=0.05,color='black') +
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),color=Chadcm,size=0.3,alpha=alph)+
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),color=Ctrace,size=0.3,alpha=alph)+
geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000,size=0.1,alpha=alph,
outlier.size=0.5,outlier.stroke = 0.15,outlier.alpha=1,outlier.colour='Black')
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-100,100,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
plotLat <- regionData[[reg]][["latitude"]]
plotLon <- regionData[[reg]][["longitude"]]
if (is.na(regionData[[reg]]$xadjust)){regionData[[reg]]$xadjust <- 0}
if (is.na(regionData[[reg]]$yadjust)){regionData[[reg]]$yadjust <- 0}
map <- map + draw_plot(regPlt,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
width = xSize, height = ySize)
map
xSize <- 1
ySize <- 0.7
map <- map + draw_plot(regPlt,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
width = xSize, height = ySize)
map
?draw_plot
map <- map + draw_plot(regPlt,width = xSize, height = ySize
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
map <- map + draw_plot(regPlt,width = xSize, height = ySize,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
map
regPlt
map<- ggdraw(ggplot() +
#Set Border around plot - probably not the best way to do this
borders(aggregate(regionsSelect$composite, FUN=length), fill=NA, colour='black', size=1) +
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = subset(regionsSelect$composite, Acronym %in% regNames), fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
map <- map + draw_plot(regPlt,width = xSize, height = ySize,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
map
map<- ggdraw(ggplot() +
#Set Border around plot - probably not the best way to do this
borders(aggregate(regionsSelect$composite, FUN=length), fill=NA, colour='black', size=1) +
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = subset(regionsSelect$composite, Acronym %in% regNames), fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
for (reg in regNames){
#Load Data for Region
regTso   <- regionData[[reg]][[var]][["LiPD"]]
regEnsNA <- read.csv(file.path(dir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
if (var == 'HC'){scaleVal <- 30}
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
if (var == 'HC'){
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelVar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
regEns[regionData[[reg]][[var]][["pltTimeAvail50range"]],] <- regEnsNA[regionData[[reg]][[var]][["pltTimeAvail50range"]],]
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.05,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=alph,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=alph-0.2,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelVar)){
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)*1.2
compBands$ts <- compBands$ts + geom_hline(yintercept=0,size=0.05,color='black') +
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),color=Chadcm,size=0.3,alpha=alph)+
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),color=Ctrace,size=0.3,alpha=alph)+
geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000,size=0.1,alpha=alph,
outlier.size=0.5,outlier.stroke = 0.15,outlier.alpha=1,outlier.colour='Black')
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-100,100,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
plotLat <- regionData[[reg]][["latitude"]]
plotLon <- regionData[[reg]][["longitude"]]
if (is.na(regionData[[reg]]$xadjust)){regionData[[reg]]$xadjust <- 0}
if (is.na(regionData[[reg]]$yadjust)){regionData[[reg]]$yadjust <- 0}
map <- map + draw_plot(regPlt,width = xSize, height = ySize,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
}
scale <- ggplot() +
scale_x_reverse('Age (ka BP)',limits=c(12,0),expand=c(0,0),breaks=seq(0,12,3),labels=c('0','','6','','12'))+
#geom_segment(aes(x=11.5,xend=6,y=1,yend=1),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=2,yend=2),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=3,yend=3),size=2,color='Black') +
#geom_segment(aes(x=11.4,xend=6.1,y=1,yend=1),size=1.5,color=Chadcm,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=2,yend=2),size=1.5,color=Ctrace,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=3,yend=3),size=1.5,color=Csettings[2],alpha=alph) +
#annotate("text",label="HadCM", x = 3, y = 1,family='sans',color='Black',size = 1.7)+
#annotate("text",label="TraCE", x = 3, y = 2,family='sans',color='Black',size = 1.7) +
#annotate("text",label="Proxy", x = 3, y = 3,family='sans',color='Black',size = 1.7) +
scale_y_continuous(limits=c(0,3.7),expand=c(0,0))+
theme_void()+
theme(panel.background=element_rect(colour='White',fill='White'),
plot.background    =element_rect(colour='white',fill='White'),
axis.line.x = element_line(color = 'black',size=0.3),
axis.ticks.x  = element_line(color = 'Black',size=0.3),
axis.text.x = element_text(family='sans',size=5),
axis.title.x = element_text(family='sans',size=5),
axis.ticks.length.x=unit(3,"pt"),
#plot.margin = unit(c(0.1, 0.1, 0.5,0.1), "in"),
text = element_text(family='sans',size=8))
if (var == 'HC'){
map2 <- map +
theme(plot.margin = unit(c(0,rep(0,4)), "in"))
#annotate("text",label="(a) Hydroclimate", x = 0.11, y = 0.93,family='sans',color='Black',size = 2)
} else{
map2 <- map +annotate("text",label="(b) Temperature", x = 0.11, y = 0.93,family='sans',color='Black',size = 2.2)
}
map3 <- map2 + draw_plot(scale,
x = 0.14,
y = 0.22,
width = xSize, height = ySize*2.5)
ggsave(plot=map3, width = 6.5, height = 3.4, dpi = 600,
filename = paste(file.path(dir,'Figures','global_'),modelVar,'_compBandPlt.png',sep=''))
xSize <- 0.1
ySize <- 0.07
map<- ggdraw(ggplot() +
#Set Border around plot - probably not the best way to do this
borders(aggregate(regionsSelect$composite, FUN=length), fill=NA, colour='black', size=1) +
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = subset(regionsSelect$composite, Acronym %in% regNames), fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
for (reg in regNames){
#Load Data for Region
regTso   <- regionData[[reg]][[var]][["LiPD"]]
regEnsNA <- read.csv(file.path(dir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
if (var == 'HC'){scaleVal <- 30}
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
if (var == 'HC'){
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelVar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
regEns[regionData[[reg]][[var]][["pltTimeAvail50range"]],] <- regEnsNA[regionData[[reg]][[var]][["pltTimeAvail50range"]],]
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.05,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=alph,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=alph-0.2,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelVar)){
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)*1.2
compBands$ts <- compBands$ts + geom_hline(yintercept=0,size=0.05,color='black') +
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),color=Chadcm,size=0.3,alpha=alph)+
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),color=Ctrace,size=0.3,alpha=alph)+
geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000,size=0.1,alpha=alph,
outlier.size=0.5,outlier.stroke = 0.15,outlier.alpha=1,outlier.colour='Black')
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-100,100,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
plotLat <- regionData[[reg]][["latitude"]]
plotLon <- regionData[[reg]][["longitude"]]
if (is.na(regionData[[reg]]$xadjust)){regionData[[reg]]$xadjust <- 0}
if (is.na(regionData[[reg]]$yadjust)){regionData[[reg]]$yadjust <- 0}
map <- map + draw_plot(regPlt,width = xSize, height = ySize,
x = regionData[[reg]]$xadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$yadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
}
xSize <- 0.1
ySize <- 0.07
scale <- ggplot() +
scale_x_reverse('Age (ka BP)',limits=c(12,0),expand=c(0,0),breaks=seq(0,12,3),labels=c('0','','6','','12'))+
#geom_segment(aes(x=11.5,xend=6,y=1,yend=1),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=2,yend=2),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=3,yend=3),size=2,color='Black') +
#geom_segment(aes(x=11.4,xend=6.1,y=1,yend=1),size=1.5,color=Chadcm,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=2,yend=2),size=1.5,color=Ctrace,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=3,yend=3),size=1.5,color=Csettings[2],alpha=alph) +
#annotate("text",label="HadCM", x = 3, y = 1,family='sans',color='Black',size = 1.7)+
#annotate("text",label="TraCE", x = 3, y = 2,family='sans',color='Black',size = 1.7) +
#annotate("text",label="Proxy", x = 3, y = 3,family='sans',color='Black',size = 1.7) +
scale_y_continuous(limits=c(0,3.7),expand=c(0,0))+
theme_void()+
theme(panel.background=element_rect(colour='White',fill='White'),
plot.background    =element_rect(colour='white',fill='White'),
axis.line.x = element_line(color = 'black',size=0.3),
axis.ticks.x  = element_line(color = 'Black',size=0.3),
axis.text.x = element_text(family='sans',size=5),
axis.title.x = element_text(family='sans',size=5),
axis.ticks.length.x=unit(3,"pt"),
#plot.margin = unit(c(0.1, 0.1, 0.5,0.1), "in"),
text = element_text(family='sans',size=8))
if (var == 'HC'){
map2 <- map +
theme(plot.margin = unit(c(0,rep(0,4)), "in"))
#annotate("text",label="(a) Hydroclimate", x = 0.11, y = 0.93,family='sans',color='Black',size = 2)
} else{
map2 <- map +annotate("text",label="(b) Temperature", x = 0.11, y = 0.93,family='sans',color='Black',size = 2.2)
}
map3 <- map2 + draw_plot(scale,
x = 0.14,
y = 0.22,
width = xSize, height = ySize*2.5)
ggsave(plot=map3, width = 6.5, height = 3.4, dpi = 600,
filename = paste(file.path(dir,'Figures','global_'),modelVar,'_compBandPlt.png',sep=''))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
dir <-  '/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate'
var  <- 'HC'
modelVar <- NA
project = TRUE
Data <- vector(mode='list')
Data$proxy <- read.csv(file.path(dir,'Data','RegionComposites',var,'MedianTS_byRegion.csv'))
for (model in c('trace','hadcm','cmip6')){
Data[[model]]<- read.csv(file.path(dir,'Data','Model','RegionTS',
paste('regional_',modelVar,'_',model,'.csv',sep='')))
}
regNames <-names(Data$proxy)[-1]
binvec <- Data$proxy$time
#Figure Settings----
#Climate variable Settings for HC vs T
regionData <- load()
if (var=='T'){ Csettings  <- c("#fddbc7","#d6604d","#b2182b") #reds
}else{
Csettings <- c("#ebfaeb","#145214","#0a290a") #greens
Csettings <- c("#f6e8c3","#bf812d","#8c510a") #yellows
Csettings <- c("#E1E6EA","#8599AB",'#434D55') #Blues
}
Csettings <- c("#80DBF1","#253DA1",'#000137') #Blues
Chadcm <- '#AB8599'
Ctrace <- '#99AB85'
alph<-0.8
map<- ggdraw(ggplot() +
#Set Border around plot - probably not the best way to do this
borders(aggregate(regionsSelect$composite, FUN=length), fill=NA, colour='black', size=1) +
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = subset(regionsSelect$composite, Acronym %in% regNames), fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
for (reg in regNames){
#Load Data for Region
regTso   <- regionData[[reg]][[var]][["LiPD"]]
regEnsNA <- read.csv(file.path(dir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
if (var == 'HC'){scaleVal <- 30}
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
if (var == 'HC'){
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelVar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
regEns[regionData[[reg]][[var]][["pltTimeAvail50range"]],] <- regEnsNA[regionData[[reg]][[var]][["pltTimeAvail50range"]],]
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.05,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=alph,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=alph-0.2,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelVar)){
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)*1.2
compBands$ts <- compBands$ts + geom_hline(yintercept=0,size=0.05,color='black') +
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),color=Chadcm,size=0.3,alpha=alph)+
geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),color=Ctrace,size=0.3,alpha=alph)+
geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000,size=0.1,alpha=alph,
outlier.size=0.5,outlier.stroke = 0.15,outlier.alpha=1,outlier.colour='Black')
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-100,100,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
plotLat <- regionData[[reg]][["latitude"]]
plotLon <- regionData[[reg]][["longitude"]]
if (is.na(regionData[[reg]]$xadjust)){regionData[[reg]]$xadjust <- 0}
if (is.na(regionData[[reg]]$yadjust)){regionData[[reg]]$yadjust <- 0}
map <- map + draw_plot(regPlt,width = xSize, height = ySize,
x = regionData[[reg]]$yadjust+(0.5-xSize/2)+0.5*plotLon/(9050504*2),
y = regionData[[reg]]$xadjust+(0.5-ySize/2)+0.92*plotLat/(8625155*2),
)
}
xSize <- 0.1
ySize <- 0.07
scale <- ggplot() +
scale_x_reverse('Age (ka BP)',limits=c(12,0),expand=c(0,0),breaks=seq(0,12,3),labels=c('0','','6','','12'))+
#geom_segment(aes(x=11.5,xend=6,y=1,yend=1),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=2,yend=2),size=2,color='Black') +
#geom_segment(aes(x=11.5,xend=6,y=3,yend=3),size=2,color='Black') +
#geom_segment(aes(x=11.4,xend=6.1,y=1,yend=1),size=1.5,color=Chadcm,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=2,yend=2),size=1.5,color=Ctrace,alpha=alph) +
#geom_segment(aes(x=11.4,xend=6.1,y=3,yend=3),size=1.5,color=Csettings[2],alpha=alph) +
#annotate("text",label="HadCM", x = 3, y = 1,family='sans',color='Black',size = 1.7)+
#annotate("text",label="TraCE", x = 3, y = 2,family='sans',color='Black',size = 1.7) +
#annotate("text",label="Proxy", x = 3, y = 3,family='sans',color='Black',size = 1.7) +
scale_y_continuous(limits=c(0,3.7),expand=c(0,0))+
theme_void()+
theme(panel.background=element_rect(colour='White',fill='White'),
plot.background    =element_rect(colour='white',fill='White'),
axis.line.x = element_line(color = 'black',size=0.3),
axis.ticks.x  = element_line(color = 'Black',size=0.3),
axis.text.x = element_text(family='sans',size=5),
axis.title.x = element_text(family='sans',size=5),
axis.ticks.length.x=unit(3,"pt"),
#plot.margin = unit(c(0.1, 0.1, 0.5,0.1), "in"),
text = element_text(family='sans',size=8))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
dir <-  '/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate'
var  <- 'HC'
modelVar <- NA
project = TRUE
Data <- vector(mode='list')
Data$proxy <- read.csv(file.path(dir,'Data','RegionComposites',var,'MedianTS_byRegion.csv'))
#dir  <- getwd()
dir  <- '/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate' #
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
var  <- 'HC'
modelVar <- NA
project = TRUE
Data <- vector(mode='list')
Data$proxy <- read.csv(file.path(dir,'Data','RegionComposites',var,'MedianTS_byRegion.csv'))
#for (model in c('trace','hadcm','cmip6')){
# Data[[model]]<- read.csv(file.path(dir,'Data','Model','RegionTS',
#                                   paste('regional_',modelVar,'_',model,'.csv',sep='')))
#}
regNames <-names(Data$proxy)[-1]
var  <- 'HC'
modelVar <- NA
project = TRUE
Data <- vector(mode='list')
Data$proxy <- read.csv(file.path(dir,'Data','RegionComposites',var,'MedianTS_byRegion.csv'))
#for (model in c('trace','hadcm','cmip6')){
# Data[[model]]<- read.csv(file.path(dir,'Data','Model','RegionTS',
#                                   paste('regional_',modelVar,'_',model,'.csv',sep='')))
#}
regNames <-names(Data$proxy)[-1]
binvec <- Data$proxy$time
#Figure Settings----
#Climate variable Settings for HC vs T
regionData <- load()
if (var=='T'){ Csettings  <- c("#fddbc7","#d6604d","#b2182b") #reds
}else{
Csettings <- c("#ebfaeb","#145214","#0a290a") #greens
Csettings <- c("#f6e8c3","#bf812d","#8c510a") #yellows
Csettings <- c("#E1E6EA","#8599AB",'#434D55') #Blues
}
regionData <- readRDS(file.path(dir,'Data','FigureSettings','regionData.rds'))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
regionData[[reg]][["latitude"]]
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
map<- ggdraw(ggplot() +
#Set Border around plot - probably not the best way to do this
borders(aggregate(regionsSelect$all, FUN=length), fill=NA, colour='black', size=1) +
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = subset(regionsSelect$composite, Acronym %in% regNames), fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
map
map<- ggdraw(basempa +
#Set Border around plot - probably not the best way to do this
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = regionsSelect$composite, fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
map<- ggdraw(basemap +
#Set Border around plot - probably not the best way to do this
geom_map(data=regionsSelect$composite, map=fortify(regionsSelect$composite),aes(x=long, y=lat, group=group, map_id=id),
fill="white", colour="white", size=0.3)+
#Add Country data (basemap)
geom_map(data=countries, map=fortify(countries), aes(x=long, y=lat, group=group, map_id=id),
fill = "grey80",color="grey90",size=0.1) +
borders(database = regionsSelect$composite, fill=NA, colour='grey40',size=0.1) +
coord_fixed(1) +
theme_void())
map
map<- ggdraw(basemap + borders(database = regionsSelect$composite, fill=NA, colour='grey40',size=0.1)
)
map
map<- ggdraw(basemap + borders(database = regionsSelect$composite, fill=NA, colour='grey40',size=0.1))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA,2,mean,na.rm=TRUE)))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/4_CreateRegionsRDS.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/4_CreateRegionsRDS.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
max(abs(regEns))
max(abs(regEns),na.rm=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Scripts/R/Figure8_GlobalTimeseries.R', echo=TRUE)
