geom_vline(xintercept=median(proxyDf$ageRes), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRes), size=0.8, linetype=2) +
geom_histogram(aes(ageRes,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRes,na.rm=TRUE)+25,25)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 25 years)" ,
limits=c(max(proxyDf$ageRes,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageRes,na.rm=TRUE),300)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageResPlus), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageResPlus), size=0.8, linetype=2) +
geom_histogram(aes(ageResPlus,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageResPlus,na.rm=TRUE)+50,50)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 50 years)" ,
limits=c(0,max(proxyDf$ageResPlus,na.rm=TRUE)), expand=c(0,0), breaks=seq(0,max(proxyDf$ageResPlus,na.rm=TRUE),600)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figSize[1], height = figSize[2], dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRes), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRes), size=0.8, linetype=2) +
geom_histogram(aes(ageRes,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRes,na.rm=TRUE)+25,25)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 25 years)" ,
limits=c(max(proxyDf$ageRes,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageRes,na.rm=TRUE),300)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageResPlus), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageResPlus), size=0.8, linetype=2) +
geom_histogram(aes(ageResPlus,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageResPlus,na.rm=TRUE)+50,50)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 50 years)" ,
limits=c(max(proxyDf$ageResPlus,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageResPlus,na.rm=TRUE),600)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figSize[1], height = figSize[2], dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRes), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRes), size=0.8, linetype=2) +
geom_histogram(aes(ageRes,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRes,na.rm=TRUE)+25,25)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 25 years)" ,
limits=c(max(proxyDf$ageRes,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageRes,na.rm=TRUE),300)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageResPlus), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageResPlus), size=0.8, linetype=2) +
geom_histogram(aes(ageResPlus,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageResPlus,na.rm=TRUE)+100,100)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 50 years)" ,
limits=c(max(proxyDf$ageResPlus,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageResPlus,na.rm=TRUE),600)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figSize[1], height = figSize[2], dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRes), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRes), size=0.8, linetype=2) +
geom_histogram(aes(ageRes,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRes,na.rm=TRUE)+25,25)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 25 years)" ,
limits=c(max(proxyDf$ageRes,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageRes,na.rm=TRUE),300)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,125), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageResPlus), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageResPlus), size=0.8, linetype=2) +
geom_histogram(aes(ageResPlus,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageResPlus,na.rm=TRUE)+100,100)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name="Median Proxy Sample Resolution (binwidth = 50 years)" ,
limits=c(max(proxyDf$ageResPlus,na.rm=TRUE),0), expand=c(0,0), breaks=seq(0,max(proxyDf$ageResPlus,na.rm=TRUE),600)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,125), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figSize[1], height = figSize[2], dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),breaks=seq(3000,12000,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
?scale_x_continuous
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0.05,0.05),breaks=seq(3000,12000,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0.01,0.01),breaks=seq(3000,12000,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0.01,0.01),breaks=seq(3000,12001,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12001),expand=c(0.01,0.01),breaks=seq(3000,12001,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12100),expand=c(0.01,0.01),breaks=seq(3000,12001,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(2900,12100),expand=c(0,0),breaks=seq(3000,12001,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
View(proxyDf)
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(2900,12400),expand=c(0,0),breaks=seq(3000,12000,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(2900,12400),expand=c(0,0),breaks=seq(3000,12400,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyDf)+
geom_vline(xintercept=median(proxyDf$ageRange), size=0.8) +
geom_vline(xintercept=mean(proxyDf$ageRange), size=0.8, linetype=2) +
geom_histogram(aes(ageRange,fill=CategorySpec), color='Black', alpha=0.7, breaks = seq(0,max(proxyDf$ageRange,na.rm=TRUE)+500,500)) +
scale_fill_manual(values=plotSettings$color) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(2900,13000),expand=c(0,0),breaks=seq(3000,13000,2000)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,150), expand=c(0,0))+
coord_flip()+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotProxyAgeRange.png"))
}
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=1,aes(fill=group),color='Black',size=0.2)+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
#Plot Figure 1 proxy type for each site
proxyMapSites <- basemap +
geom_map(data=refrenceSubset, map=dataTable, alpha=0.75, size=0.3, color='black' ,
aes(x=long, y=lat, group=group, map_id=id),fill=NA,linetype = "dashed") +
geom_star(data= as.data.frame(proxyDataPrj),aes(x=longitude.1 , y=latitude.1,
starshape=CategorySpec, fill=CategorySpec),
size=1.5,color='Black',alpha=1,starstroke=0.3) +
scale_fill_manual(values=plotSettings$color,name= 'Proxy Category') +
scale_starshape_manual(values=plotSettings$shape,name= 'Proxy Category') +
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.background =  element_rect(fill = alpha('white', 0.85),size=0.5),#alpha=0.5),
legend.margin = margin(c(0, 0.1, 0.05, 0.06), unit="in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.position = c(0.15,0.28),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
proxyDf$ipccReg
names(readRDS(file.path(dir,'Data','FigureSettings','regionData.rds')))
read.csv(file.path(dir,'Data','RegionComposites','T','MedianTSbyRegion.csv'))))
read.csv(file.path(dir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
read.csv(file.path(dir,'Data','RegionComposites','T','MedianTSbyRegion.csv'))
colnames(read.csv(file.path(dir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
regionsSelect <- vector(mode='list')
regionsSelect$all       <- refregions
regionsSelect$select    <- subset(refregions, Acronym %in% proxyDf$ipccReg)
regionsSelect$composite <- subset(refregions, Acronym %in% colnames(read.csv(file.path(dir,'Data','RegionComposites','T','MedianTSbyRegion.csv'))))
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=1,aes(fill=group),color='Black',size=0.2)+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=1,aes(fill=group),color='Black',size=0.2)+
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotTimeAvailability.png"))
}
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black',size=0.2)+
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotTimeAvailability.png"))
}
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black',size=0.2)+
scale_fill_manual(values=plotSettings$color) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),n.breaks=7)+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'White',color='Black'),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figSize[1], height = figSize[2], units='in', dpi = 600,
filename = file.path(dataDir,"Figures","PlotTimeAvailability.png"))
}
as.matrix(purrr::map_dfc(regionData,magrittr::extract,"name"))
regionData
source("C:/Users/clh624/Desktop/HoloceneHydroclimate/Scripts/R/4_CreateRegionsRDS.R", echo=TRUE)
source("C:/Users/clh624/Desktop/HoloceneHydroclimate/Scripts/R/4_CreateRegionsRDS.R", echo=TRUE)
as.matrix(purrr::map_dfc(regionData,magrittr::extract,"name"))
View(as.matrix(purrr::map_dfc(regionData,magrittr::extract,"name")))
sort(as.vector(refregions$Acronym))
data.frame(sort(as.vector(refregions$Acronym)))
data.frame(region==sort(as.vector(refregions$Acronym))))
data.frame(region==sort(as.vector(refregions$Acronym)))
data.frame(region=sort(as.vector(refregions$Acronym)))
refregions$Acronym
length(refregions$Acronym)
names(regionData)
length(regionData)
length(names(regionData))
View( regionData[[reg]])
