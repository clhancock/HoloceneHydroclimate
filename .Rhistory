}
}
}
z <- unique(chronDataSelect$Dataset_ID)[ts]
if (is.na(z)){z<-unique(chronDataSelect$Dataset_ID)[1]}
ts_sig <- as.numeric(significance[[TS_Poll[[ts]]$geo_continent]][which(significance[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),54])
ts_rmse <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),73])
ts_r    <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),74])
if (include & ts_sig<=0.1){
QC <- c(QC,TRUE)#append(TSids,TS_Poll[[ts]]$paleoData_TSid)
} else {QC <- c(QC,FALSE)}
Dataset <- c(Dataset,TS_Poll[[ts]]$dataSetName)
TSids <- c(TSids,TS_Poll[[ts]]$paleoData_TSid)
RecordLength <- c(RecordLength,TS_Poll[[ts]]$ageRange)
RecordRes <- c(RecordRes,TS_Poll[[ts]]$ageRes)
C14AgeN <- c(C14AgeN,TS_Poll[[ts]]$AgeControlN )
C14AgeMaxGap <- c(C14AgeMaxGap,TS_Poll[[ts]]$AgeControlMax)
Sig <- c(Sig,ts_sig)
R <-c(R,ts_r)
RMSE <-c(RMSE,ts_rmse)
#UncTSID <- c(UncTSID,)
}
if(!is.na(unique(chronDataSelect$Dataset_ID)[ts+1])){print(Dselect$dataSetName)}
}
#dir<-"/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Data/Proxy/LegacyClimate"
z<- as.data.frame(list(Dataset=Dataset,TSid=TSids,RecordLength=RecordLength,RecordMedianResolution= RecordRes,AgeControl_n=C14AgeN,AgeControl_Gap=C14AgeMaxGap,pvalue=Sig,rvalue=R,RMSEvalue=RMSE,QC=QC))
#write.csv(as.data.frame(TSids),file.path(dir,"LegacyClimateTSidPassQC.csv"))
print(sum(z$QC))
dir<-"/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Data/Proxy/LegacyClimate"
z<- as.data.frame(list(Dataset=Dataset,TSid=TSids,RecordLength=RecordLength,RecordMedianResolution= RecordRes,AgeControl_n=C14AgeN,AgeControl_Gap=C14AgeMaxGap,pvalue=Sig,rvalue=R,RMSEvalue=RMSE,QC=QC))
print(sum(z$QC))
write.csv(as.data.frame(TSids),file.path(dir,"LegacyClimateTSidPassQC.csv"))
dir
write.csv(as.data.frame(z),file.path("C:/Users/clh624/Download","LegacyClimateTSidPassQC.csv"))
write.csv(z,file.path("C:/Users/clh624/Download","LegacyClimateTSidPassQC.csv"))
write.csv(z,"C:/Users/clh624/Download/LegacyClimateTSidPassQC.csv"))
write.csv(z,"C:/Users/clh624/Download/LegacyClimateTSidPassQC.csv")
write.csv(z,"Users/chrishancock/Downloads/LegacyClimateTSidPassQC.csv")
write.csv(z,"/Users/chrishancock/Downloads/LegacyClimateTSidPassQC.csv")
write.csv(z,"C:/Users/chrishancock/Downloads/LegacyClimateTSidPassQC.csv")
write.csv(z,"C://Users/clh624/Desktop)
write.csv(z,"C://Users/clh624/Desktop")
z
write.csv(z,"C://Users/clh624/Desktop")
write.csv(z,"C://Users/clh624/Desktop")
write.csv(z,"C://Users/clh624/Desktop")
?write.csv
write.csv(z,"C://Users/clh624/Desktop/z.csv")
write.csv(z,"C://Users/clh624/Desktop/CLegacyClimateTSidPassQC.csv.csv")
write.csv(z,"C://Users/clh624/Desktop/LegacyClimateTSidPassQC.csv.csv")
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Pollunfiltered
pullTsVariable(TS_Pollunfiltered)
pullTsVariable(TS_Pollunfiltered,"paleoData_variable")
pullTsVariable(TS_Pollunfiltered,"paleoData_variableName")
length(TS_Poll)
D<-2
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Poll))
D<-3
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_PolDl[which(pullTsVariable(TS_Pollunfiltered,'climateInterpretation1_variable')=='P')]
print(length(TS_Poll))
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Pollunfiltered,'climateInterpretation1_variable')=='P')]
print(length(TS_Poll))
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Poll))
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Pollunfiltered))
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Pollunfiltered,'paleoData_primaryTimeseries')==TRUE)]
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
D
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Poll))
pullTsVariable(TS_Pollunfiltered,"paleoData_variableName")
names(TS_Pollunfiltered[31])
names(TS_Pollunfiltered[[31]])
TS_Pollunfiltered
View(TS_Pollunfiltered)
TS_Pollunfiltered[[31]][["dataSetName"]]
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
pullTsVariable(TS_Pollunfiltered,"paleoData_paleoDataTSid")
pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[1]]$paleoData_TSid
)
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[1]]$paleoData_TSid)
TS_Poll
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Poll))
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[1]]$paleoData_TSid)
TS_Poll[[1]]$paleoData_TSid)
TSPoll[[1]]$paleoData_TSid)
TS_Poll[[1]]
View(TS_Poll)
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
View(TS_Poll)
View(z)
View(TS_Pollunfiltered)
TS_Poll <- TS_Pollunfiltered[which(pullTsVariable(TS_Pollunfiltered,'paleoData_primaryTimeseries')==TRUE)]
View(TS_Poll)
which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')
length(TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')])
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
TS_Poll
View(TS_Poll)
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
print(length(TS_Poll))
TS_Poll
pullTsVariable(TS_Pollunfiltered,"paleoData_TSID")
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid ")==TS_Poll[[1]]$paleoData_TSid
)
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid ")==TS_Poll[[1]]$paleoData_TSid)
TS_Poll[[1]]$paleoData_TSid
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid ")==TS_Poll[[1]]$paleoData_TSid)
pullTsVariable(TS_Pollunfiltered,"paleoData_TSid ")
pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[1]]$paleoData_TSid)
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[1]]$paleoData_TSid)+1
dir <- "/Users/chrishancock/Dropbox"
#Dpoll   <- readLipd(file.path(dir,"LegacyClimate"))
TSids <- c()
chronData <-  read.table("C:/Users/clh624/Downloads/Table-S1_chronological_control_points_metadata.csv", sep = '\t',header = TRUE)
significance <- vector(mode='list')
significance[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930595")[[1]][["data"]]
significance[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930593")[[1]][["data"]]
#significance[["Europe"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930733")[[1]][["data"]]
significance[["Europe"]]                <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-signif_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")
significance[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930590")[[1]][["data"]]
colnames(significance[["Europe"]])<-names(significance[["Asia"]]  )
calibrationStats <- vector(mode='list')
calibrationStats[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930606")[[1]][["data"]]
#calibrationStats[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Eastern North America"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_ENAmerica.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
#calibrationStats[["Europe"]]                 <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Europe"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
calibrationStats[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930599")[[1]][["data"]]
colnames(calibrationStats[["Europe"]])<-names(significance[["Asia"]]  )
colnames(calibrationStats[["Eastern North America"]])<-names(significance[["Asia"]]  )
Dataset <- TSids <- RecordLength <- RecordRes <- C14AgeN <- C14AgeMaxGap <- Sig <- R <- RMSE <- QC <- UncTSID <- c()
for (i in 1:length(Dpoll)){
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Pollunfiltered[which(pullTsVariable(TS_Pollunfiltered,'paleoData_primaryTimeseries')==TRUE)]
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
print(length(TS_Poll))
for (ts in 1:length(TS_Poll)){
#Add age information
include <- FALSE
tso <- data.frame(age = as.numeric(TS_Poll[[ts]]$age), values = as.numeric(TS_Poll[[ts]]$paleoData_values)) %>%
filter(between(age,-100,12000)) %>%
filter(!is.na(values)) %>%
arrange(age)
if (nrow(tso) < 10) {next}
TS_Poll[[ts]]$ageMin     <- min(tso$age)
TS_Poll[[ts]]$ageMax     <- max(tso$age)
TS_Poll[[ts]]$ageRange   <- diff(range(tso$age))
TS_Poll[[ts]]$ageRes     <- median(diff(tso$age))
TS_Poll[[ts]]$ageResPlus <- median(diff(tso$age[which(diff(tso$values) != 0)]))
TS_Poll[[ts]]$geo_continent
AgeControl <- chronDataSelect[which(chronDataSelect$Dataset_ID==unique(chronDataSelect$Dataset_ID)[ts]),]$Age_Calibrated..kyr.BP*1000
AgeControl <- AgeControl[which(AgeControl<=12000)]
if(length(AgeControl)<=3){       thresh <- 1
} else if(length(AgeControl)<=6){thresh <- 2
} else{                          thresh <- length(AgeControl)*0.3334
}
if(length(which(diff(AgeControl)<0))>=thresh){next} #allow for 1 age reversal for every 4 age control points
TS_Poll[[ts]]$AgeControlMax <- max(diff(c(TS_Poll[[ts]]$ageMin,AgeControl,TS_Poll[[ts]]$ageMax)))
TS_Poll[[ts]]$AgeControlN   <- length(AgeControl)
if (!is.na(TS_Poll[[ts]]$ageRange)){
if (TS_Poll[[ts]]$ageRange > 4000 & TS_Poll[[ts]]$ageRes < 400){
if (TS_Poll[[ts]]$AgeControlMax < 3000 & TS_Poll[[ts]]$AgeControlN >= 2){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 3500 & TS_Poll[[ts]]$AgeControlN >= 5){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 4000 & TS_Poll[[ts]]$AgeControlN >= 6){
include <- TRUE
}
}
}
z <- unique(chronDataSelect$Dataset_ID)[ts]
if (is.na(z)){z<-unique(chronDataSelect$Dataset_ID)[1]}
ts_sig <- as.numeric(significance[[TS_Poll[[ts]]$geo_continent]][which(significance[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),54])
ts_rmse <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),74])
ts_r    <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),73])
if (include & ts_sig<=0.1){
QC <- c(QC,TRUE)#append(TSids,TS_Poll[[ts]]$paleoData_TSid)
} else {QC <- c(QC,FALSE)}
Dataset <- c(Dataset,TS_Poll[[ts]]$dataSetName)
TSids <- c(TSids,TS_Poll[[ts]]$paleoData_TSid)
RecordLength <- c(RecordLength,TS_Poll[[ts]]$ageRange)
RecordRes <- c(RecordRes,TS_Poll[[ts]]$ageRes)
C14AgeN <- c(C14AgeN,TS_Poll[[ts]]$AgeControlN )
C14AgeMaxGap <- c(C14AgeMaxGap,TS_Poll[[ts]]$AgeControlMax)
Sig <- c(Sig,ts_sig)
R <-c(R,ts_r)
RMSE <-c(RMSE,ts_rmse)
UncTSID <- c(UncTSID,TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[i]]$paleoData_TSid)+1]]$paleoData_TSid)
}
if(!is.na(unique(chronDataSelect$Dataset_ID)[ts+1])){print(Dselect$dataSetName)}
}
pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")
TS_Poll[[i]]$paleoData_TSid
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[i]]$paleoData_TSid)
dir <- "/Users/chrishancock/Dropbox"
#Dpoll   <- readLipd(file.path(dir,"LegacyClimate"))
TSids <- c()
chronData <-  read.table("C:/Users/clh624/Downloads/Table-S1_chronological_control_points_metadata.csv", sep = '\t',header = TRUE)
significance <- vector(mode='list')
significance[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930595")[[1]][["data"]]
significance[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930593")[[1]][["data"]]
#significance[["Europe"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930733")[[1]][["data"]]
significance[["Europe"]]                <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-signif_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")
significance[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930590")[[1]][["data"]]
colnames(significance[["Europe"]])<-names(significance[["Asia"]]  )
calibrationStats <- vector(mode='list')
calibrationStats[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930606")[[1]][["data"]]
#calibrationStats[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Eastern North America"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_ENAmerica.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
#calibrationStats[["Europe"]]                 <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Europe"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
calibrationStats[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930599")[[1]][["data"]]
colnames(calibrationStats[["Europe"]])<-names(significance[["Asia"]]  )
colnames(calibrationStats[["Eastern North America"]])<-names(significance[["Asia"]]  )
Dataset <- TSids <- RecordLength <- RecordRes <- C14AgeN <- C14AgeMaxGap <- Sig <- R <- RMSE <- QC <- UncTSID <- c()
for (i in 1:length(Dpoll)){
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Pollunfiltered[which(pullTsVariable(TS_Pollunfiltered,'paleoData_primaryTimeseries')==TRUE)]
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
print(length(TS_Poll))
for (ts in 1:length(TS_Poll)){
#Add age information
include <- FALSE
tso <- data.frame(age = as.numeric(TS_Poll[[ts]]$age), values = as.numeric(TS_Poll[[ts]]$paleoData_values)) %>%
filter(between(age,-100,12000)) %>%
filter(!is.na(values)) %>%
arrange(age)
if (nrow(tso) < 10) {next}
TS_Poll[[ts]]$ageMin     <- min(tso$age)
TS_Poll[[ts]]$ageMax     <- max(tso$age)
TS_Poll[[ts]]$ageRange   <- diff(range(tso$age))
TS_Poll[[ts]]$ageRes     <- median(diff(tso$age))
TS_Poll[[ts]]$ageResPlus <- median(diff(tso$age[which(diff(tso$values) != 0)]))
TS_Poll[[ts]]$geo_continent
AgeControl <- chronDataSelect[which(chronDataSelect$Dataset_ID==unique(chronDataSelect$Dataset_ID)[ts]),]$Age_Calibrated..kyr.BP*1000
AgeControl <- AgeControl[which(AgeControl<=12000)]
if(length(AgeControl)<=3){       thresh <- 1
} else if(length(AgeControl)<=6){thresh <- 2
} else{                          thresh <- length(AgeControl)*0.3334
}
if(length(which(diff(AgeControl)<0))>=thresh){next} #allow for 1 age reversal for every 4 age control points
TS_Poll[[ts]]$AgeControlMax <- max(diff(c(TS_Poll[[ts]]$ageMin,AgeControl,TS_Poll[[ts]]$ageMax)))
TS_Poll[[ts]]$AgeControlN   <- length(AgeControl)
if (!is.na(TS_Poll[[ts]]$ageRange)){
if (TS_Poll[[ts]]$ageRange > 4000 & TS_Poll[[ts]]$ageRes < 400){
if (TS_Poll[[ts]]$AgeControlMax < 3000 & TS_Poll[[ts]]$AgeControlN >= 2){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 3500 & TS_Poll[[ts]]$AgeControlN >= 5){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 4000 & TS_Poll[[ts]]$AgeControlN >= 6){
include <- TRUE
}
}
}
z <- unique(chronDataSelect$Dataset_ID)[ts]
if (is.na(z)){z<-unique(chronDataSelect$Dataset_ID)[1]}
ts_sig <- as.numeric(significance[[TS_Poll[[ts]]$geo_continent]][which(significance[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),54])
ts_rmse <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),74])
ts_r    <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),73])
if (include & ts_sig<=0.1){
QC <- c(QC,TRUE)#append(TSids,TS_Poll[[ts]]$paleoData_TSid)
} else {QC <- c(QC,FALSE)}
Dataset <- c(Dataset,TS_Poll[[ts]]$dataSetName)
TSids <- c(TSids,TS_Poll[[ts]]$paleoData_TSid)
RecordLength <- c(RecordLength,TS_Poll[[ts]]$ageRange)
RecordRes <- c(RecordRes,TS_Poll[[ts]]$ageRes)
C14AgeN <- c(C14AgeN,TS_Poll[[ts]]$AgeControlN )
C14AgeMaxGap <- c(C14AgeMaxGap,TS_Poll[[ts]]$AgeControlMax)
Sig <- c(Sig,ts_sig)
R <-c(R,ts_r)
RMSE <-c(RMSE,ts_rmse)
UncTSID <- c(UncTSID,TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid)
}
if(!is.na(unique(chronDataSelect$Dataset_ID)[ts+1])){print(Dselect$dataSetName)}
}
length(TS_Poll)
TS_Poll[[ts]]$paleoData_TSid
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
print(length(TS_Poll))
for (ts in 1:length(TS_Poll)){
#Add age information
include <- FALSE
tso <- data.frame(age = as.numeric(TS_Poll[[ts]]$age), values = as.numeric(TS_Poll[[ts]]$paleoData_values)) %>%
filter(between(age,-100,12000)) %>%
filter(!is.na(values)) %>%
arrange(age)
if (nrow(tso) < 10) {next}
TS_Poll[[ts]]$ageMin     <- min(tso$age)
TS_Poll[[ts]]$ageMax     <- max(tso$age)
TS_Poll[[ts]]$ageRange   <- diff(range(tso$age))
TS_Poll[[ts]]$ageRes     <- median(diff(tso$age))
TS_Poll[[ts]]$ageResPlus <- median(diff(tso$age[which(diff(tso$values) != 0)]))
TS_Poll[[ts]]$geo_continent
AgeControl <- chronDataSelect[which(chronDataSelect$Dataset_ID==unique(chronDataSelect$Dataset_ID)[ts]),]$Age_Calibrated..kyr.BP*1000
AgeControl <- AgeControl[which(AgeControl<=12000)]
if(length(AgeControl)<=3){       thresh <- 1
} else if(length(AgeControl)<=6){thresh <- 2
} else{                          thresh <- length(AgeControl)*0.3334
}
if(length(which(diff(AgeControl)<0))>=thresh){next} #allow for 1 age reversal for every 4 age control points
TS_Poll[[ts]]$AgeControlMax <- max(diff(c(TS_Poll[[ts]]$ageMin,AgeControl,TS_Poll[[ts]]$ageMax)))
TS_Poll[[ts]]$AgeControlN   <- length(AgeControl)
if (!is.na(TS_Poll[[ts]]$ageRange)){
if (TS_Poll[[ts]]$ageRange > 4000 & TS_Poll[[ts]]$ageRes < 400){
if (TS_Poll[[ts]]$AgeControlMax < 3000 & TS_Poll[[ts]]$AgeControlN >= 2){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 3500 & TS_Poll[[ts]]$AgeControlN >= 5){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 4000 & TS_Poll[[ts]]$AgeControlN >= 6){
include <- TRUE
}
}
}
z <- unique(chronDataSelect$Dataset_ID)[ts]
if (is.na(z)){z<-unique(chronDataSelect$Dataset_ID)[1]}
ts_sig <- as.numeric(significance[[TS_Poll[[ts]]$geo_continent]][which(significance[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),54])
ts_rmse <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),74])
ts_r    <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),73])
if (include & ts_sig<=0.1){
QC <- c(QC,TRUE)#append(TSids,TS_Poll[[ts]]$paleoData_TSid)
} else {QC <- c(QC,FALSE)}
Dataset <- c(Dataset,TS_Poll[[ts]]$dataSetName)
TSids <- c(TSids,TS_Poll[[ts]]$paleoData_TSid)
RecordLength <- c(RecordLength,TS_Poll[[ts]]$ageRange)
RecordRes <- c(RecordRes,TS_Poll[[ts]]$ageRes)
C14AgeN <- c(C14AgeN,TS_Poll[[ts]]$AgeControlN )
C14AgeMaxGap <- c(C14AgeMaxGap,TS_Poll[[ts]]$AgeControlMax)
Sig <- c(Sig,ts_sig)
R <-c(R,ts_r)
RMSE <-c(RMSE,ts_rmse)
UncTSID <- c(UncTSID,TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid)
}
TS_Pollunfiltered,"paleoData_TSid")
pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")
which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)
TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid)
TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid
TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid]]
TS_Poll[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]
TS_Poll[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]
dir <- "/Users/chrishancock/Dropbox"
#Dpoll   <- readLipd(file.path(dir,"LegacyClimate"))
TSids <- c()
chronData <-  read.table("C:/Users/clh624/Downloads/Table-S1_chronological_control_points_metadata.csv", sep = '\t',header = TRUE)
significance <- vector(mode='list')
significance[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930595")[[1]][["data"]]
significance[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930593")[[1]][["data"]]
#significance[["Europe"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930733")[[1]][["data"]]
significance[["Europe"]]                <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-signif_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")
significance[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930590")[[1]][["data"]]
colnames(significance[["Europe"]])<-names(significance[["Asia"]]  )
calibrationStats <- vector(mode='list')
calibrationStats[["Western North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930606")[[1]][["data"]]
#calibrationStats[["Eastern North America"]]  <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Eastern North America"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_ENAmerica.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
#calibrationStats[["Europe"]]                 <- pangaear::pg_data(doi= "10.1594/PANGAEA.930730")[[1]][["data"]]
calibrationStats[["Europe"]]                 <- read.delim("C:/Users/clh624/Downloads/Herzschuh-etal_2021_climate-recons-model-stats_Europe.tab", sep = '\t',header = TRUE,fileEncoding="UTF-16LE")#,row.names=NULL)
calibrationStats[["Asia"]]                   <- pangaear::pg_data(doi= "10.1594/PANGAEA.930599")[[1]][["data"]]
colnames(calibrationStats[["Europe"]])<-names(significance[["Asia"]]  )
colnames(calibrationStats[["Eastern North America"]])<-names(significance[["Asia"]]  )
Dataset <- TSids <- RecordLength <- RecordRes <- C14AgeN <- C14AgeMaxGap <- Sig <- R <- RMSE <- QC <- UncTSID <- c()
for (i in 1:length(Dpoll)){
Dselect <- Dpoll[[i]]
chronDataSelect <- chronData[which(chronData$Site_ID==Dselect$LegacyClimateSiteId & chronData$Site_Name==Dselect[["geo"]][["siteName"]]),]
if(is.null(Dselect[["pub"]][[1]][["citation"]])){
chronDataSelect <- chronDataSelect[which(is.na(chronDataSelect$First_Publication)),]
} else{
chronDataSelect <- chronDataSelect[which(chronDataSelect$First_Publication==Dselect[["pub"]][[1]][["citation"]]),]
}
TS_Pollunfiltered <- splitInterpretationByScope(extractTs(Dselect))
TS_Poll <- TS_Pollunfiltered[which(pullTsVariable(TS_Pollunfiltered,'paleoData_primaryTimeseries')==TRUE)]
TS_Poll <- TS_Poll[which(pullTsVariable(TS_Poll,'climateInterpretation1_variable')=='P')]
for (ts in 1:length(TS_Poll)){
#Add age information
include <- FALSE
tso <- data.frame(age = as.numeric(TS_Poll[[ts]]$age), values = as.numeric(TS_Poll[[ts]]$paleoData_values)) %>%
filter(between(age,-100,12000)) %>%
filter(!is.na(values)) %>%
arrange(age)
if (nrow(tso) < 10) {next}
TS_Poll[[ts]]$ageMin     <- min(tso$age)
TS_Poll[[ts]]$ageMax     <- max(tso$age)
TS_Poll[[ts]]$ageRange   <- diff(range(tso$age))
TS_Poll[[ts]]$ageRes     <- median(diff(tso$age))
TS_Poll[[ts]]$ageResPlus <- median(diff(tso$age[which(diff(tso$values) != 0)]))
TS_Poll[[ts]]$geo_continent
AgeControl <- chronDataSelect[which(chronDataSelect$Dataset_ID==unique(chronDataSelect$Dataset_ID)[ts]),]$Age_Calibrated..kyr.BP*1000
AgeControl <- AgeControl[which(AgeControl<=12000)]
if(length(AgeControl)<=3){       thresh <- 1
} else if(length(AgeControl)<=6){thresh <- 2
} else{                          thresh <- length(AgeControl)*0.3334
}
if(length(which(diff(AgeControl)<0))>=thresh){next} #allow for 1 age reversal for every 4 age control points
TS_Poll[[ts]]$AgeControlMax <- max(diff(c(TS_Poll[[ts]]$ageMin,AgeControl,TS_Poll[[ts]]$ageMax)))
TS_Poll[[ts]]$AgeControlN   <- length(AgeControl)
if (!is.na(TS_Poll[[ts]]$ageRange)){
if (TS_Poll[[ts]]$ageRange > 4000 & TS_Poll[[ts]]$ageRes < 400){
if (TS_Poll[[ts]]$AgeControlMax < 3000 & TS_Poll[[ts]]$AgeControlN >= 2){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 3500 & TS_Poll[[ts]]$AgeControlN >= 5){
include <- TRUE
} else if (TS_Poll[[ts]]$AgeControlMax < 4000 & TS_Poll[[ts]]$AgeControlN >= 6){
include <- TRUE
}
}
}
z <- unique(chronDataSelect$Dataset_ID)[ts]
if (is.na(z)){z<-unique(chronDataSelect$Dataset_ID)[1]}
ts_sig <- as.numeric(significance[[TS_Poll[[ts]]$geo_continent]][which(significance[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),54])
ts_rmse <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),74])
ts_r    <-  as.numeric(calibrationStats[[TS_Poll[[ts]]$geo_continent]][which(calibrationStats[[TS_Poll[[ts]]$geo_continent]]$`ID (Dataset)`==z),73])
if (include & ts_sig<=0.1){
QC <- c(QC,TRUE)#append(TSids,TS_Poll[[ts]]$paleoData_TSid)
} else {QC <- c(QC,FALSE)}
Dataset <- c(Dataset,TS_Poll[[ts]]$dataSetName)
TSids <- c(TSids,TS_Poll[[ts]]$paleoData_TSid)
RecordLength <- c(RecordLength,TS_Poll[[ts]]$ageRange)
RecordRes <- c(RecordRes,TS_Poll[[ts]]$ageRes)
C14AgeN <- c(C14AgeN,TS_Poll[[ts]]$AgeControlN )
C14AgeMaxGap <- c(C14AgeMaxGap,TS_Poll[[ts]]$AgeControlMax)
Sig <- c(Sig,ts_sig)
R <-c(R,ts_r)
RMSE <-c(RMSE,ts_rmse)
UncTSID <- c(UncTSID,TS_Pollunfiltered[[which(pullTsVariable(TS_Pollunfiltered,"paleoData_TSid")==TS_Poll[[ts]]$paleoData_TSid)+1]]$paleoData_TSid)
}
if(!is.na(unique(chronDataSelect$Dataset_ID)[ts+1])){print(Dselect$dataSetName)}
}
#dir<-"/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Data/Proxy/LegacyClimate"
#z<- as.data.frame(list(Dataset=Dataset,TSid=TSids,RecordLength=RecordLength,RecordMedianResolution= RecordRes,AgeControl_n=C14AgeN,AgeControl_Gap=C14AgeMaxGap,pvalue=Sig,rvalue=R,RMSEvalue=RMSE,QC=QC))
print(sum(z$QC))
#dir<-"/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Data/Proxy/LegacyClimate"
z<- as.data.frame(list(Dataset=Dataset,TSid=TSids,RecordLength=RecordLength,RecordMedianResolution= RecordRes,AgeControl_n=C14AgeN,AgeControl_Gap=C14AgeMaxGap,pvalue=Sig,rvalue=R,RMSEvalue=RMSE,QC=QC))
print(sum(z$QC))
#dir<-"/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/2021_HoloceneHydroclimate/2021_HoloceneHydroclimate/Data/Proxy/LegacyClimate"
z<- as.data.frame(list(Dataset=Dataset,TSid=TSids,RecordLength=RecordLength,RecordMedianResolution= RecordRes,AgeControl_n=C14AgeN,AgeControl_Gap=C14AgeMaxGap,pvalue=Sig,rvalue=R,RMSEvalue=RMSE,QC=QC,MeasUncertaintyTSid=UncTSID))
print(sum(z$QC))
write.csv(z,"C://Users/clh624/Desktop/LegacyClimateTSidPassQC.csv.csv")
