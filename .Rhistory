geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=1.1,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family='sans',size=20),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=1.1) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=1.1,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=1.1) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=1.1,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.1, "in"),
legend.key.width = unit(0.1, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.2, "in"),
legend.key.width = unit(0.2, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.2, "in"),
legend.key.width = unit(0.2, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.15, "in"),
legend.key.width = unit(0.15, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.15, "in"),
legend.key.width = unit(0.15, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=1.1) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=1.1,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family='sans',size=20),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=1.1) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=1.1,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=0.7,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=0.7,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.7))#legend.position = 'none')#
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=0.7,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.4,0.7))#legend.position = 'none')#
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRange <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRange),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRange),size=0.7,linetype=2) +
geom_histogram(aes(recordRange,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 300) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Record Length (binwidth = 300 years)",
limits=c(3000,12000),expand=c(0,0),breaks=seq(3000,12000,1200)) +
scale_y_continuous(name = "Count of Records",oob=scales::squish,limits=c(0,120),expand=c(0,0)) +
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRange
if (save) {
ggsave(plot=plotRange, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRange.png"))
}
plotRes <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordRes),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordRes),size=0.7,linetype=2) +
geom_histogram(aes(recordRes,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name="Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,1250), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')#
plotRes
##############################
plotResPlus <- ggplot(proxyMetaData)+
geom_vline(xintercept=median(proxyMetaData$recordResPlus),size=0.7) +
geom_vline(xintercept=mean(proxyMetaData$recordResPlus),size=0.7,linetype=2) +
geom_histogram(aes(recordResPlus,fill=CategorySpec),color='Black',alpha=0.7,binwidth = 30) +
scale_fill_manual(values=plotSettings$colors) +
scale_x_continuous(name = "Median Sample Resolution (binwidth = 30 years)" ,
limits=c(0,3000), expand=c(0,0), breaks=seq(0,1250,150)) +
scale_y_continuous(name="Count of Records", oob=scales::squish, limits=c(0,110), expand=c(0,0))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank(),legend.position = c(0.5,0.6))#legend.position = 'none')# legend.position = c(0.5,0.7))
plotResPlus
if (save) {
ggsave(plot=plotRes, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeRes.png"))
ggsave(plot=plotResPlus, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotProxyAgeResPlus.png"))
}
#Plot a figure showiang temporal variability over the Holocene (using geochronR)
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black')+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank(),legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
ggsave(plot=plotTime, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotTimeAvailability.png"))
#Plot a figure showiang temporal variability over the Holocene (using geochronR)
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black')+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotTimeAvailability.png"))
}
#Plot a figure showiang temporal variability over the Holocene (using geochronR)
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black')+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotTimeAvailability.png"))
}
#Plot a figure showiang temporal variability over the Holocene (using geochronR)
plotTimeData <- plotTimeAvailabilityTs(lipdTSO,age.range = c(0,12000),step=100,group='CategorySpecific')
plotTime <- ggplot(plotTimeData$data,aes(yvec,value))+
geom_area(alpha=0.7,aes(fill=group),color='Black')+
scale_fill_manual(values=plotSettings$colors) +
scale_x_reverse(name = "Age (yr BP)", limits=c(12000,0),expand=c(0,0),
n.breaks=7,sec.axis = sec_axis(~.,labels=NULL))+
scale_y_continuous(name = "Count of Records",limits=c(0,length(lipdTSO)),expand=c(0,0),
labels=seq(0,length(lipdTSO),100), breaks=seq(0,length(lipdTSO),100))+
theme_bw()+
theme(text = element_text(family=figFont,size=figText),
plot.background = element_rect(fill = 'white',color='Black'),
plot.margin = unit(c(0.25, 0.25, 0.2, 0.2), "in"),
legend.key.height = unit(0.12, "in"),
legend.key.width = unit(0.12, "in"),
legend.title = element_blank())#,legend.position = 'none')# legend.position = c(0.5,0.7))
plotTime
if (save) {
ggsave(plot=plotTime, width = figS[1], height = figS[2], dpi = 600,
filename = file.path(githubDir,"Figures","PlotTimeAvailability.png"))
}
