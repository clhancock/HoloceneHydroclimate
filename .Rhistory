as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE)
)
hadcmVals
regEnsNA
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
View( regEnsNA)
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
View( regEnsNA)
View(regEnsNA)
sd(hadcmVals)
sd(hadcmVals,na.rm=TRUE)
mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))
nudgeVals[which(nudgeVals$region==reg),'x']
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 30
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
nudgeVals[which(nudgeVals$region==reg),'x']
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelvar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
#RegionMap
timeN <-  plotTimeAvailabilityTs(regTso,age.range=c(0,12000),step=100)$dat %>%
group_by(yvec) %>%
summarise(count=sum(value),nPct=sum(value)/length(regTso))
if (length(which(timeN$nPct<=0.5) > 0)){
mh <- which(timeN$yvec==6000)
idx <- c(max(which(timeN$nPct[1:mh]<=0.5),1),
min(which(timeN$nPct[mh:length(timeN$yvec)]<=0.5)+mh,length(timeN$yvec)))
regEns[idx[1]:idx[2],] <- regEnsNA[idx[1]:idx[2],]
} else{regEns<-regEnsNA}
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.2,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=0.8,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelvar)){
compBands$ts <- compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),
color='#827717',size=0.4,alpha=0.8)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),
color='firebrick4',size=0.4,alpha=0.8)
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-20,20,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
regPlt
?geom_boxplot
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.2,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=0.8,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low=Csettings[1],
color.high=Csettings[2],
color.line=Csettings[3])
if (!is.na(modelvar)){
compBands$ts <- compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),alpha=0.6,width=1000)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),
color='#827717',size=0.4,alpha=0.8)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),
color='firebrick4',size=0.4,alpha=0.8)
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)
}
for (plt in names(compBands)){
compBands[[plt]] <- compBands[[plt]] +
scale_x_reverse(limits=c(12100,-100), expand=c(0,0), n.breaks=7,sec.axis = dup_axis())+
scale_y_continuous(limits=c(plotlimit_set*c(-1000,1000)),breaks=seq(-20,20,2),sec.axis = dup_axis())+
coord_cartesian(xlim=c(12000,0), ylim=c(plotlimit_set*c(-1,1))) +
theme_void() +
theme(panel.border    = element_rect(color='Black',fill=NA,size=0.5),
axis.ticks      = element_line(color='Black',size=0.1),
axis.ticks.length = unit(-1,"pt"),
plot.margin       = unit(c(0, 0, 0, 0), "in"), legend.position='none')
regPlt <- regPlt + draw_plot(compBands[[plt]], x = 0, y = 0, width = 1, height = 1)
}
regPlt
Csettings[1]
Csettings[2]
plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low='#EDF2F1',#Csettings[1],
color.high='#0069FC',#Csettings[2],
color.line='#004D40')#Csettings[3])
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low='#EDF2F1',#Csettings[1],
color.high='#0069FC',#Csettings[2],
color.line='#004D40')#Csettings[3])
if (!is.na(modelvar)){
compBands$ts <- compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),alpha=0.6,width=1000)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),
color='#827717',size=0.4,alpha=0.8)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),
color='firebrick4',size=0.4,alpha=0.8)
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)
}
compBands$ts
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low='#EDF2F1',#Csettings[1],
color.high='#0069FC',#Csettings[2],
color.line='#004D40')#Csettings[3])
if (!is.na(modelvar)){
compBands$ts <- compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),alpha=0.6,width=1000)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=hadcmVals),
color='#1A237E',size=0.5,alpha=0.8)
compBands$ts <- compBands$ts + geom_line(aes(x=binvec[which(between(binvec,0,12000))],y=traceVals),
color='firebrick4',size=0.5,alpha=0.8)
plotlimit_set <- max(abs(c(traceVals,hadcmVals,Data[['cmip6']][[reg]],apply(regEns,1,mean))),na.rm=TRUE)
}
compBands$ts
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
?geom_boxplot
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=0.5,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill='White')
reg<-'MED'
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=0.5,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.color ='White')
?geom_boxplot
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=0.5,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Da`1qswdta[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.fill='White')
)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.fill='White')
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.color='White')
?geom_boxplot
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.fill=NA)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=10,#outlier.stroke = 0.2,
outlier.color='Black',outlier.fill=NA)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=10,#outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill=NA)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=100,#outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill=NA)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=100,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill=NA)
ggplot()+geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=10,outlier.stroke = 0.2,
outlier.colour='Black',outlier.fill=NA)
?geom_boxplot
compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,#alpha=0.6,
outlier.size=0.5,outlier.stroke = 0.2,
outlier.alpha =1,outlier.colour='Black')
compBands$ts + geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),
width=1000,size=0.2,alpha=0.6,
outlier.size=0.5,outlier.stroke = 0.2,
outlier.alpha =1,outlier.colour='Black')
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
regNames[1:5]
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
std
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
climVar <- 'T'
#
###Load Data
lipdData <- readRDS(file.path(dataDir,'Data','LiPD','lipdData.rds'))
lipdTSO  <- lipdData[[climVar]]
regNames <- sort(unique(as.character(pullTsVariable(lipdTSO,'geo_ipccRegion'))))
save=TRUE
set.seed(5) #make reproducible
#
#Set variables for composite code
nens          <- 1000    #lower = faster
binsize       <- 100   #years (median resolution = 107yrs)
ageMin        <- -100  #age BP
ageMax        <- 12400 #age BP
searchDur     <- 3500  #yrs (for 3 lake deposit data points)
nThresh       <- 6     #minimum # of records, else skip #arbitrary
samplePct     <- 0.75  #arbitrary
binvec   <- seq(ageMin-binsize/2, to = ageMax+binsize/2, by = binsize)
binYears <- rowMeans(cbind(binvec[-1],binvec[-length(binvec)]))
#Set up data to add once regional composite is calculated
compositeEns      <- vector(mode="list")
medianCompositeTS <- data_frame(time=binYears)
length(lipdTSO)
names(lipdTSO[[1]])
pullTsVariable(lipdTSO,'paleoData_units')
names(lipdTSO[[1]])
pullTsVariable(lipdTSO,paleoData_inCompilation')
pullTsVariable(lipdTSO,'paleoData_inCompilation')
pullTsVariable(lipdTSO,'paleoData_inCompilation')
names(lipdTSO[[1]])
z <- names(lipdTSO[[1]])
View(z)
pullTsVariable(lipdTSO,'paleoData_temp12kDkIndex')
pullTsVariable(lipdTSO,'climateInterpretation1_variableDetail')
pullTsVariable(lipdTSO,'climateInterpretation1_seasonalityGeneral')
unique(pullTsVariable(lipdTSO,'climateInterpretation1_seasonalityGeneral'))
z <- names(lipdTSO[[2]])
View(z)
unique(pullTsVariable(lipdTSO,'paleoData_useInGlobalTemperatureAnalysis'))
unique(pullTsVariable(lipdTSO,'paleoData_variableType'))
unique(pullTsVariable(lipdTSO,'paleoData_datum'))
pullTsVariable(lipdTSO,'paleoData_datum')=='abs'
sum(pullTsVariable(lipdTSO,'paleoData_datum')=='abs')
count(pullTsVariable(lipdTSO,'paleoData_datum')=='abs')
count(pullTsVariable(lipdTSO,'paleoData_datum'=='abs'))
sum(pullTsVariable(lipdTSO,'paleoData_datum'=='abs'))
pullTsVariable(lipdTSO,'paleoData_datum'=='abs')
pullTsVariable(lipdTSO,'paleoData_datum==abs')
pullTsVariable(lipdTSO,'paleoData_datum == abs')
lipdTSO <- filterTs(lipdTSO,'paleoData_datum == abs')}
lipdTSO <- filterTs(lipdTSO,'paleoData_datum == abs')}
lipdTSO <- filterTs(lipdTSO,'paleoData_datum == abs')
pullTsVariable(lipdTSO,'paleoData_units')
units(pullTsVariable(lipdTSO,'paleoData_units'))
unique(pullTsVariable(lipdTSO,'paleoData_units'))
lipdTSO <- filterTs(lipdTSO,'paleoData_units == degC')
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/a2_Composite.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
pullTsVariable(lipdTSO,'climateInterpretation1_direction')
unique(pullTsVariable(lipdTSO,'climateInterpretation1_direction'))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/a2_Composite.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 30
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
scaleVal <- 1
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
nudgeVals[which(nudgeVals$region==reg),'x']
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelvar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))
hadcmVals
Data[['hadcm']][[reg]]
paste('regional_',modelvar,'_',model,'.csv',sep='')
"regional_tas_ANN_cmip6"
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
Data[[model]]
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
hadcmVals
traceVals
nudgeVals[which(nudgeVals$region==reg),'x']
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelvar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
regEns   <- matrix(NA,nrow(regEnsNA),ncol(regEnsNA))
#RegionMap
timeN <-  plotTimeAvailabilityTs(regTso,age.range=c(0,12000),step=100)$dat %>%
group_by(yvec) %>%
summarise(count=sum(value),nPct=sum(value)/length(regTso))
if (length(which(timeN$nPct<=0.5) > 0)){
mh <- which(timeN$yvec==6000)
idx <- c(max(which(timeN$nPct[1:mh]<=0.5),1),
min(which(timeN$nPct[mh:length(timeN$yvec)]<=0.5)+mh,length(timeN$yvec)))
regEns[idx[1]:idx[2],] <- regEnsNA[idx[1]:idx[2],]
} else{regEns<-regEnsNA}
plotlimit_set <- 5
regPlt <- ggdraw(ggplot()+theme_void()+theme(plot.background= element_rect(colour='White',fill='White')))
compBands <- vector(mode = 'list')
compBands$na <-  plotTimeseriesEnsRibbons(ggplot()+geom_hline(yintercept=0,size=0.2,color='black'),
X=timeN$yvec, Y=regEnsNA, alp=0.7,line.width=0.1,
color.low='grey90',
color.high='grey50',
color.line='grey20')
compBands$ts <- plotTimeseriesEnsRibbons(X=timeN$yvec, Y=regEns, alp=0.8,line.width=0.1,
color.low='#ebfaeb',#Csettings[1],EDF2F1
color.high='#145214',#Csettings[2],0069FC
color.line='#0a290a')#Csettings[3])004D40
compBands$ts + geom_hline(yintercept=0,size=0.2,color='black')
compBands$ts + geom_hline(yintercept=0,size=0.2,color='black') +
geom_boxplot(aes(x=6000,y=Data[['cmip6']][[reg]]*scaleVal),width=1000,size=0.2,alpha=0.6,
outlier.size=0.3,outlier.stroke = 0.2,outlier.alpha=1,outlier.colour='Black')
Data[['cmip6']][[reg]]
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
map
ggsave(plot=map, width = 6, height = 6*0.5072, dpi = 400,
filename = paste(file.path(dataDir,'Figures','global_'),modelvar,'_compBandPlt.png',sep=''))
reg <- 'WNA'
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
nudgeVals[which(nudgeVals$region==reg),'x']
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
if (var == 'HC'){scaleVal <- 30}
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
hadcmVals
traceVals
nudgeVals[which(nudgeVals$region==reg),'x']
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
regEnsNA
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
scaleVal <- 1
if (var == 'HC'){scaleVal <- 30}
hadcmVals <- (Data[['hadcm']][[reg]]-mean(Data[['hadcm']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
traceVals <- (Data[['trace']][[reg]]-mean(Data[['trace']][1:5,reg],na.rm=TRUE))[1:121]*scaleVal
nudgeVals[which(nudgeVals$region==reg),'x']
#Standardize mean at 0
regEnsNA <- as.matrix(regEnsNA - as.numeric(apply(regEnsNA[which(between(binvec,0,500)),],2,mean,na.rm=TRUE)))
if (var == 'HC'){
regEnsNA <- regEnsNA / as.numeric(apply(regEnsNA,2,sd,na.rm=TRUE))
if (!is.na(modelvar)){regEnsNA <- regEnsNA * mean(sd(traceVals,na.rm=TRUE),sd(hadcmVals,na.rm=TRUE))}
}
#Load Data for Region
regTso <- filterTs(lipdTso,paste('geo_ipccRegion ==',reg))
regEnsNA <- read.csv(file.path(dataDir,'Data','RegionComposites',var,paste(reg,'.csv',sep='')))
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
source('/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate/Scripts/R/f4_compositeMap.R', echo=TRUE)
hcNames <- read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))
tNames  <- read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv'))
hcNames
hcNames <- names(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv')))
tNames  <- names(read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
hcNames
hcNames <- names(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv')))[-1]
tNames  <- names(read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))[-1]
hcNames
hcNames %in% tNames
regNames <- hcNames[which(hcNames %in% tNames)]
regNames
source('~/.active-rstudio-document', echo=TRUE)
hcNames <- names(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv')))
tNames  <- names(read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
regNames <- hcNames[which(hcNames %in% tNames)]
regNames
regNames <- hcNames[which(hcNames %in% tNames)][-1]
regNames
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))
read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))['time',]
read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time']
which(between(time,0,12000))
which(between(time,0,12000))
time <- read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time']
which(between(time,0,12000))
length(HCseries[1,])
hcNames <- names(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv')))
tNames  <- names(read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
time <- read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time']
regNames <- hcNames[which(hcNames %in% tNames)][-1]
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
HCseries <- HCseries[which(between(time,0,12000)),]
T_series <- T_series[which(between(time,0,12000)),]
corEns(time,HCseries,time,T_series)
?corEns
seq(0,12000,100)
corEns(time,HCseries,time,T_series,seq(0,12000,100),100,1000)
HCseries
dim(HCseries)
dim(T_series)
dim(time)
time <- read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time']
time
regNames <- hcNames[which(hcNames %in% tNames)][-1]
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
HCseries <- HCseries[which(between(time,0,12000)),]
T_series <- T_series[which(between(time,0,12000)),]
corEns(time,HCseries,time,T_series,seq(0,12000,100),100,1000)
time
corEns(time,HCseries,time,T_series)
class(time)
time <- as.matrix(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time'])
corEns(time,HCseries,time,T_series,seq(0,12000,100),100,1000)
class(time)
corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series)
dim(time)
z= corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series)#,seq(0,12000,100),100,1000)
time
HCseries
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
HCseries <- HCseries[which(between(time,0,12000)),]
T_series <- T_series[which(between(time,0,12000)),]
time <- time[which(between(time,0,12000)),]
z= corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series)#,seq(0,12000,100),100,1000)
time
time <- as.matrix(time[which(between(time,0,12000)),])
time[which(between(time,0,12000)),]
hcNames <- names(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv')))
tNames  <- names(read.csv(file.path(dataDir,'Data','RegionComposites','T','MedianTSbyRegion.csv')))
time <- as.matrix(read.csv(file.path(dataDir,'Data','RegionComposites','HC','MedianTSbyRegion.csv'))[,'time'])
regNames <- hcNames[which(hcNames %in% tNames)][-1]
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
HCseries <- HCseries[which(between(time,0,12000)),]
T_series <- T_series[which(between(time,0,12000)),]
HCseries
T_series
time[which(between(time,0,12000)),])
time[which(between(time,0,12000)),]
class(time[which(between(time,0,12000)),])
as.matrix(time[which(between(time,0,12000)),])
time <- as.matrix(time[which(between(time,0,12000)),])
corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series)
class(HCseries)
HCseries <- read.csv(file.path(dataDir,'Data','RegionComposites','HC',paste(reg,'.csv',sep='')))
T_series <- read.csv(file.path(dataDir,'Data','RegionComposites','T',paste(reg,'.csv',sep='')))
HCseries <- as.matrix(HCseries[which(between(time,0,12000)),])
T_series <- as.matrix(T_series[which(between(time,0,12000)),])
time <- as.matrix(time[which(between(time,0,12000)),])
z= corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series)#,seq(0,12000,100),100,1000)
z= corEns(time.1=time,values.1=HCseries,time.2=time,values.2=T_series,bin.step=100)#,seq(0,12000,100),100,1000)
