fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=paste(bquote('Insolation Anomaly (W/m'^2),")",sep=''))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=paste(bquote('Insolation Anomaly (W/m'^2),")",sep=''))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=paste('Insolation Anomaly (W/',as.character(bquote(m^2)),")",sep=''))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=paste('Insolation Anomaly (W/',as.character(bquote('m'^2)),")",sep=''))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
?
bquote
expression(paste('Insolation Anomaly (W/m', ^2,')'))
expression(paste('Insolation Anomaly (W/', m^2,')'))
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name='Insolation Anomaly (W/m^2)')) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name='Insolation Anomaly (W/(m^(2)))')) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=bquote('Insolation Anomaly (W/m'^2*")"))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=bquote('Insolation Anomaly (W / m'^2*")"))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
#fcde9c,#faa476,#f0746e,#e34f6f,#dc3977,#b9257a,#7c1d6f
ggsave(plot=fig, width = 4.5, height = 3, dpi = 600,
filename = file.path(dir,'Figures','RegionComposites',paste('Monsoon_',var,'.png',sep='')))
fig<-ggplot(RegionTS)+
geom_hline(yintercept =0,color='grey70')+
geom_line(aes(x=time,y=EAS,color='EAS',linetype='North'),size=s) +
geom_line(aes(x=time,y=TIB,color='TIB',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAH,color='SAH',linetype='North'),size=s) +
geom_line(aes(x=time,y=NEAF,color='NEAF',linetype='North'),size=s) +
geom_line(aes(x=time,y=SAM,color='SAM',linetype='South'),size=s) +
geom_line(aes(x=time,y=ESAF,color='ESAF',linetype='South'),size=s) +
geom_smooth(data=insolation30,aes(   x=age,y=(DJF)*scale+shift,fill="30\u00B0S DJF"),alpha=1,color="Grey50",linetype=2,size=s) +
geom_smooth(data=insolationNeg30,aes(x=age,y=(JJA)*scale+shift,fill="30\u00B0N JJA"),alpha=1,color="Black",linetype=1,size=s) +
scale_x_reverse(limits = c(30000,0),breaks = seq(0, 12000, 2000),labels=seq(0, 12, 2),name="Age (ka BP)") +
scale_y_continuous(limits=c(-10,10),name="Proxy Composite Anomaly",sec.axis = sec_axis((~./scale),name=bquote('Insolation Anomaly (W m'^-2*")"))) +
coord_cartesian(xlim=c(12000,0), ylim=c(-4,4),expand	=FALSE) +
scale_linetype_manual(values=c(1,2,1,1,1,1,2,1,1,2),name='Hemisphere') +
scale_fill_manual(values=c("White","White",rep(NA,8)),name='Insolation') +
scale_color_manual(values=c('#fcde9c','#faa476','#f0746e','#dc3977','#b9257a','#7c1d6f','black','grey'),name='Region')+#c(RColorBrewer::brewer.pal(12,"Paired")[seq(2,12,2)]),name='Region') +
guides(fill  = guide_legend(override.aes = list(linetype = c(1,6),color=c('Black','Grey50'))),
color = guide_legend(override.aes = list(linetype = c(1,6,1,1,6,1))),
linetype = guide_legend(override.aes = list(linetype = c(1,6))))+
theme_bw() +
theme(legend.key = element_rect(fill=NA,color = "white"),
legend.key.height =  unit(0.15, 'in'),
legend.spacing.y = unit(0.02, 'in'),
panel.grid = element_blank(),
text = element_text(family=figFont,size=figText))
fig
#fcde9c,#faa476,#f0746e,#e34f6f,#dc3977,#b9257a,#7c1d6f
ggsave(plot=fig, width = 4.5, height = 3, dpi = 600,
filename = file.path(dir,'Figures','RegionComposites',paste('Monsoon_',var,'.png',sep='')))
var  <- 'HC'
save <- TRUE
saveDir <- file.path(dir,'Data','RegionComposites',var)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdTSO  <- lipdData[-which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('winter+','summer','Summer+','Winter+'))]
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdTSO  <- lipdData[-which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('winter+','summer','Summer+','Winter+'))]
library(compositeR)
library(doParallel)
library(dplyr)
library(foreach)
library(geoChronR)
library(lipdR)
library(magrittr)
library(purrr)
library(tidyverse)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdTSO  <- lipdData[-which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('winter+','summer','Summer+','Winter+'))]
lipdTSO  <- vector(mode='list')
unique(pullTsVariable(lipdData,'climateInterpretation1_seasonalityGeneral'))
lipdTSO['Annual'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdTSO  <- vector(mode='list')
lipdTSO['Annual'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO['Summer'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
View(lipdTSO)
which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))
lipdTSO['Annual'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO['Summer'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO['Winter'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
View(lipdTSO)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdTSO  <- vector(mode='list')
length(lipdData)
lipdTSO['Annual'] <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
View(lipdTSO)
z <- filterTs(lipdData,paste('geo_ipccRegion %in%',c('WNA','ENA','CNA','NWN','NEN'))
)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
z <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in length(lipdTSO)){
print(length(i))
}
for (i in length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
for (i in length(lipdTSO)){
print(length(lipdTSO[i]))
}
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[i]))
}
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
names(lipdTSO[[1]])
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
names(lipdTSO[[1]])
names(lipdTSO[1])
names(lipdData[[1]])
lipdData <- filterTs(lipdData,"between(geo_longitude,0,90")
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
?between
z <- filterTs(lipdData,"geo_longitude > 0")
source("~/.active-rstudio-document", echo=TRUE)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
z <- filterTs(lipdData,"geo_longitude > 0")
pullTsVariable(lipdData,'geo_longitude')
z <- filterTs(lipdData,"geo_latitude> 0")
z <- filterTs(lipdData,"between(geo_latitude,0,90")
between(pullTsVariable(lipdData,'geo_longitude'),0,90)
between(pullTsVariable(lipdData,'geo_latitude'),0,90)
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_longitude') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- filterTs(lipdData,"between(geo_latitude,30,50")
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_longitude') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- filterTs(lipdData,"between(geo_latitude,30,50")
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_longitude') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- filterTs(lipdData,"between(geo_latitude,30,50)")
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),0,90))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),0,90))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),30,50))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),0,50))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),30,55))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),30,50))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
if(var == 'T'){
lipdTSO <- filterTs(lipdTSO,'paleoData_units == degC')
lipdTSO <- filterTs(lipdTSO,'paleoData_datum == abs')
std <- FALSE      #Use calibrated data so no need to normalize variance
} else{std <- TRUE} #Normalize variance because data recorded with different units
nens          <- 500     #Ensemble numbers (lower = faster)
binsize       <- 100     #years (median resolution = 107yrs)
ageMin        <- 0       #age BP
ageMax        <- 12400   #age BP
searchDur     <- 3500    #yrs (for 3 lake deposit data points)
nThresh       <- 6       #minimum no. of records, else skip
#Set bin vectors
binvec   <- seq(ageMin-binsize/2, to = ageMax+binsize/2, by = binsize)
binYears <- rowMeans(cbind(binvec[-1],binvec[-length(binvec)]))
library(compositeR)
library(doParallel)
library(dplyr)
library(foreach)
library(geoChronR)
library(lipdR)
library(magrittr)
library(purrr)
library(tidyverse)
#Set up directories and names--------------------------------------------------------------------------------
dir  <- getwd()# '/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate' #
var  <- 'HC'
save <- TRUE
saveDir <- file.path(dir,'Data','RegionComposites',var)
#Load Data without winter+ or summer+ seasonality--------------------------------------------------------------------------------
lipdData <- readRDS(file.path(dir,'Data','Proxy','LiPD','lipdData.rds'))[[var]]
lipdData <- lipdData[which(pullTsVariable(lipdData,'geo_ipccRegion') %in% c('WNA','ENA','CNA','NWN','NEN'))]
lipdData <- lipdData[which(between(pullTsVariable(lipdData,'geo_latitude'),30,50))]
lipdTSO  <- vector(mode='list')
lipdTSO$Annual <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Annual'))]
lipdTSO$Summer <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Summer','Summer+'))]
lipdTSO$Winter <- lipdData[which(pullTsVariable(lipdData,"climateInterpretation1_seasonalityGeneral") %in% c('Winter','Winter+'))]
for (i in 1:length(lipdTSO)){
print(length(lipdTSO[[i]]))
}
if(var == 'T'){
lipdTSO <- filterTs(lipdTSO,'paleoData_units == degC')
lipdTSO <- filterTs(lipdTSO,'paleoData_datum == abs')
std <- FALSE      #Use calibrated data so no need to normalize variance
} else{std <- TRUE} #Normalize variance because data recorded with different units
#Set variables for composite code--------------------------------------------------------------------------------
nens          <- 500     #Ensemble numbers (lower = faster)
binsize       <- 100     #years (median resolution = 107yrs)
ageMin        <- 0       #age BP
ageMax        <- 12400   #age BP
searchDur     <- 3500    #yrs (for 3 lake deposit data points)
nThresh       <- 6       #minimum no. of records, else skip
#Set bin vectors
binvec   <- seq(ageMin-binsize/2, to = ageMax+binsize/2, by = binsize)
binYears <- rowMeans(cbind(binvec[-1],binvec[-length(binvec)]))
names <- c('Annual','Summer','Winter')
#Calculate reconstructions--------------------------------------------------------------------------------
#Set up data to add once regional composite is calculated
compositeEnsemble <- vector(mode='list')
medianCompositeTS <- data_frame(time=binYears[1:which(binYears==12000)])
#Loop to composite (by region)
for (reg in c(names)) {
print(reg)
lipdReg  <- lipdTSO[[reg]]
for (i in 1:length(lipdReg)){
if (lipdReg[[i]]$climateInterpretation1_interpDirection == 'negative'){
lipdReg[[i]]$paleoData_values <- lipdReg[[i]]$paleoData_values*-1
}
}
set.seed(5) #Reproducibility
ensOut <- foreach(i = 1:nens) %dopar% {
tc <- compositeEnsembles(fTS                  = lipdReg,
binvec               = binvec,
stanFun              = standardizeMeanIteratively,
binFun               = simpleBinTs,
ageVar               = "age",
alignInterpDirection = FALSE,
spread               = TRUE,
duration             = searchDur,
searchRange          = c(1000,10000),
normalizeVariance    = std,
minN                 = 3)
return(list(composite = tc$composite,count = tc$count))
}
regionComposite           <- as.matrix(purrr::map_dfc(ensOut,magrittr::extract,"composite"))
rownames(regionComposite) <- binYears
regionComposite           <- regionComposite[1:which(binYears==12000),]
compositeEnsemble[[reg]]  <- regionComposite
medianCompositeTS[[reg]]  <- apply(regionComposite,1,median,na.rm=TRUE)
#plot region to confirm that everything looks good
plotTimeseriesEnsRibbons(X = binYears[1:which(binYears==12000)],Y = compositeEnsemble[[reg]])+
scale_x_continuous(name = "age (yr BP)",         oob = scales::squish)+
scale_y_continuous(name = "Standardized Anomaly",oob = scales::squish)+
theme_bw()+
ggtitle(paste(reg,"Composite Ensemble"))
}
dir <- '/Volumes/GoogleDrive/My Drive/zResearch/Manuscript/HoloceneHydroclimate/HoloceneHydroclimate' #
var <- 'pre'
#Load Data
proxyDataAgree <- read.csv(file.path(dir,'Data','Proxy','proxyMetaData_HC.csv'))
dir<-getwd()
#Load Data
proxyDataAgree <- read.csv(file.path(dir,'Data','Proxy','proxyMetaData_HC.csv'))
View(proxyDataAgree)
proxyDataAgree$direction
